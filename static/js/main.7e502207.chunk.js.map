{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","data/components.js","App.js","index.js","components/Statistics/Statistics.module.scss"],"names":["Section","title","children","FeedbackButton","feedback","onLeaveFeedback","type","data-feedback","onClick","FeedbackOptions","options","map","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","className","s","statItem","FEEDBACK_OPTIONS","App","state","handlearFeedback","target","dataset","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"yPAgBeA,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,MCJDC,EAAiB,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAClC,OACE,wBAAQC,KAAK,SAASC,gBAAeH,EAAUI,QAASH,EAAxD,SACGD,KAoBQK,EAfS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASL,EAAsB,EAAtBA,gBAKlC,OAAOK,EAAQC,KAAI,SAAAD,GAAO,OACxB,cAAC,EAAD,CAAgBN,SAAUM,EAASL,gBAAiBA,QCRzCO,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,6BAAKA,K,gBC8B5BC,EA3BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,uCACKD,GACD,+BACE,qBAAIE,UAAWC,IAAEC,SAAjB,mBAAkCP,KAClC,qBAAIK,UAAWC,IAAEC,SAAjB,sBAAqCN,KACrC,qBAAII,UAAWC,IAAEC,SAAjB,kBAAiCL,KACjC,qBAAIG,UAAWC,IAAEC,SAAjB,oBAAmCJ,KACnC,qBAAIE,UAAWC,IAAEC,SAAjB,gCACsBH,EADtB,UAKO,IAAVD,GAAe,cAAC,EAAD,CAAcL,QAAQ,0BCnB/BU,EAAmB,CAAC,OAAQ,UAAW,OC0DrCC,E,4MAjDbC,MAAQ,CACNV,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPS,iBAAmB,YAAiB,IAC1BtB,EADyB,EAAbuB,OACQC,QAApBxB,SACR,EAAKyB,UAAS,SAAAC,GAAS,sBAAQ1B,EAAW0B,EAAU1B,GAAY,O,EAGlE2B,mBAAqB,WACnB,MAA+B,EAAKN,MACpC,OADA,EAAQV,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBe,gCAAkC,WAChC,IAAQjB,EAAS,EAAKU,MAAdV,KACFG,EAAQ,EAAKa,qBAEnB,OAAOb,EAAQe,KAAKC,MAAOnB,EAAOG,EAAS,KAAO,G,4CAGpD,WACE,MAA+BiB,KAAKV,MAA5BV,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQiB,KAAKJ,qBACbZ,EAAqBgB,KAAKH,kCAEhC,OACE,gCACE,cAAC,EAAD,CAAS/B,MAAM,wBAAf,SACE,cAAC,EAAD,CACES,QAASa,EACTlB,gBAAiB8B,KAAKT,qBAG1B,cAAC,EAAD,CAASzB,MAAM,aAAf,SACE,cAAC,EAAD,CACEc,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GA3CdiB,a,MCHlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,SAAW,gC","file":"static/js/main.7e502207.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst FeedbackButton = ({ feedback, onLeaveFeedback }) => {\r\n  return (\r\n    <button type=\"button\" data-feedback={feedback} onClick={onLeaveFeedback}>\r\n      {feedback}\r\n    </button>\r\n  );\r\n};\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  /*return options.map(options =>\r\n    FeedbackButton({ feedback: options, onLeaveFeedback }),\r\n  );\r\n*/\r\n  return options.map(options => (\r\n    <FeedbackButton feedback={options} onLeaveFeedback={onLeaveFeedback} />\r\n  ));\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string),\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => <h3>{message}</h3>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import PropTypes from 'prop-types';\r\nimport Notification from '../Notification';\r\n\r\nimport s from './Statistics.module.scss';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      {!!total && (\r\n        <ul>\r\n          <li className={s.statItem}>Good: {good}</li>\r\n          <li className={s.statItem}>Neutral: {neutral}</li>\r\n          <li className={s.statItem}>Bad: {bad}</li>\r\n          <li className={s.statItem}>Total: {total}</li>\r\n          <li className={s.statItem}>\r\n            Positive feedback: {positivePercentage}%\r\n          </li>\r\n        </ul>\r\n      )}\r\n      {total === 0 && <Notification message=\"No feedback given\" />}\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positiveFeedback: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","export const FEEDBACK_OPTIONS = ['good', 'neutral', 'bad'];\r\n","import { Component } from 'react';\n\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\n\nimport { FEEDBACK_OPTIONS } from './data/components';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handlearFeedback = ({ target }) => {\n    const { feedback } = target.dataset;\n    this.setState(prevState => ({ [feedback]: prevState[feedback] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    //return total ? Math.round(good / total) * 100 || 0;\n    return total ? Math.round((good / total) * 100) : 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={FEEDBACK_OPTIONS}\n            onLeaveFeedback={this.handlearFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.module.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statItem\":\"Statistics_statItem__URCDk\"};"],"sourceRoot":""}